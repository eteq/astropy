language: python

python:
    - 2.6
    - 2.7
    - 3.2
    - 3.3
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        - PIP_ASTROPY_WHEEL="pip install --find-links http://wheels.astropy.org/ --find-links http://wheels2.astropy.org/ --use-wheel --no-index"
        - PIP_PYPI="pip install --use-wheel"
    matrix:
        - SETUP_CMD='egg_info' NUMPY_VERSION=1.8.0 OPTIONAL_DEPS=false

matrix:
    include:

        # Now try do scipy on 2.7 and an appropriate 3.x build (with latest numpy)
        - python: 2.7
          env: SETUP_CMD='test --parallel=8' NUMPY_VERSION=1.8.0 OPTIONAL_DEPS=true LC_CTYPE=C.ascii


before_install:

    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8

    # Install the pip that supports wheel
    - pip install setuptools --upgrade
    - pip install pip --upgrade
    - pip install wheel

    # We do this to make sure we get dependencies so pip works below
    # Note that travis does *not* use python packages installed via apt - it
    # does all the building in an isolated virtualenv
    - sudo apt-get update

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then sudo apt-get install python-numpy cython libatlas-dev liblapack-dev gfortran dnsutils; fi

    # OPTIONAL DEPENDENCIES
    - if $OPTIONAL_DEPS; then sudo apt-get install python-scipy libhdf5-serial-1.8.4 libhdf5-serial-dev; fi

    # DOCUMENTATION DEPENDENCIES
    - if [[ $SETUP_CMD == build_sphinx* ]]; then sudo apt-get install python-sphinx graphviz texlive-latex-extra dvipng python-matplotlib; fi


install:

    # CORE DEPENDENCIES
    # These command run pip, trying a wheel. If they fail the build aborts.
    - dig wheels.astropy.org
    - dig wheels2.astropy.org
    - dig www.astropy.org
    - dig astropy.org
    - dig google.com
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_ASTROPY_WHEEL --upgrade "numpy==$NUMPY_VERSION"; cat /home/travis/.pip/pip.log; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_ASTROPY_WHEEL "Cython==0.19.1"; cat /home/travis/.pip/pip.log; fi
    - if [[ $SETUP_CMD != egg_info ]]; then pip install "pytest==2.5.2"; cat /home/travis/.pip/pip.log; fi
    - if [[ $SETUP_CMD != egg_info ]]; then pip install "pytest-xdist==1.10"; cat /home/travis/.pip/pip.log; fi

    # OPTIONAL DEPENDENCIES
    - if $OPTIONAL_DEPS; then $PIP_ASTROPY_WHEEL "scipy==0.13.1"; cat /home/travis/.pip/pip.log; fi
    - if $OPTIONAL_DEPS; then $PIP_ASTROPY_WHEEL "h5py==2.1.3"; cat /home/travis/.pip/pip.log; fi
    - if $OPTIONAL_DEPS; then $PIP_ASTROPY_WHEEL "beautifulsoup4"; cat /home/travis/.pip/pip.log; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $PIP_ASTROPY_WHEEL "Sphinx>=1.2b3"; fi
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $PIP_ASTROPY_WHEEL "matplotlib==1.3.0"; fi

    # COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_ASTROPY_WHEEL "coverage" ; fi
    # coveralls is a quick install and wheels*.astropy.org don't build it, so
    # install from pypi.
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_PYPI "coveralls"; fi

script:
    - python setup.py $SETUP_CMD

after_success:
  - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls; fi
